--//Special Thanks to ECHO for providing Anomaly#2000's original source code.
--//ECHO's Channel https://www.youtube.com/channel/UCx2JS_Zcd2Ifu1Q9uJFoNDQ

--//Declarations
local SilentAim = {
    Enabled = false,
    FOV = true,
    FOVSize = 100,
    Accuracy = 100,
    Target = "Random"
}
local bodyParts = {"Head", "HumanoidRootPart"}
local players = game:GetService("Players")
local plr = players.LocalPlayer
local mouse = plr:GetMouse()
local camera = game.Workspace.CurrentCamera

--//Circle
local FOVCircle = Drawing.new("Circle")
FOVCircle.Position = Vector2.new(0, 0)
FOVCircle.Radius = 40
FOVCircle.Color = Color3.fromRGB(255, 255, 255)
FOVCircle.Thickness = 1
FOVCircle.Filled = false
FOVCircle.Visible = false
FOVCircle.Transparency = 0
FOVCircle.NumSides = 50

--//GUI
local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("Trench Warefare") -- Creates the window
local b = w:CreateFolder("Aimbot") -- Creates the folder(U will put here your buttons,etc)
b:Toggle("Silent Aim", function(bool)
    SilentAim.Enabled = bool
    FOVCircle.Visible = not FOVCircle.Visible
    print("Silent Aim Toggled.")
end)
b:Slider("FOV",{
    min = 10; -- min value of the slider
    max = 100; -- max value of the slider
    precise = true; -- max 2 decimals
},function(value)
    SilentAim.FOVSize = value
    FOVCircle.Radius = value
    print("Silent Aim FOV set to ",value)
end)

b:Toggle("Draw FOV Circle", function(bool)
    if bool == true then
        FOVCircle.Transparency = 0.6
    else
        FOVCircle.Transparency = 0
    end
end)

b:Dropdown("Target",{"Random","Head","HumanoidRootPart"},true,function(mob) --true/false, replaces the current title "Dropdown" with the option that t
    SilentAim.Target = mob
    print("Targeting ", mob)
end)

b:Slider("Accuracy",{
    min = 1; -- min value of the slider
    max = 100; -- max value of the slider
    precise = true; -- max 2 decimals
},function(value)
    SilentAim.Accuracy = value
    print("Accuracy set to ",value)
end)


b:Label("Updated by Captain K'nuckles#6150.",{
    TextSize = 10;
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
})
b:Label("Special Thanks to Anomaly#2000 for big brain.",{
    TextSize = 10;
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
    
})

--//Makes FOVCircle track mouse
function updateFOV()
    FOVCircle.Position = Vector2.new(mouse.X, mouse.Y+36)
end

--//Silent Aim
local function ClosestPlayerToMouse()
    local target = nil
    local dist = math.huge
    for i,v in pairs(players:GetPlayers()) do
        if v.Name ~= plr.Name then
            if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") and v.TeamColor ~= plr.TeamColor then
                local screenpoint = camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
                local check = (Vector2.new(mouse.X,mouse.Y)-Vector2.new(screenpoint.X,screenpoint.Y)).magnitude
                if check < dist then
                    if SilentAim.FOV then
                        if check <= SilentAim.FOVSize then
                            target  = v
                            dist = check
                        end
                    else
                        target = v
                        dist = check
                    end
                end
            end
        end
    end
    return target 
end

local mt = getrawmetatable(game)
local namecall = mt.__namecall
setreadonly(mt,false)

local OldNamecall
OldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    if tostring(self) == "ShootEvent" and method == "FireServer" then
        local player = ClosestPlayerToMouse()
        if player and SilentAim.Enabled and SilentAim.Accuracy >= math.random(1,100) then
            local targ
            if SilentAim.Target == "Random" then
                targ = bodyParts[math.random(1,2)]
            else 
                targ = SilentAim.Target
            end
            args[5] = player.Character[targ]
            args[6] = player.Character[targ].Position
        end
        return self.FireServer(self, unpack(args))
    end 
return OldNamecall(self, ...)
end)

game:GetService("RunService").Heartbeat:Connect(updateFOV)
